[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fenicsx-shells"
version = "0.10.0.dev0"
description = "A FEniCSx library for simulating thin structures"
readme = "README.md"
requires-python = ">=3.9.0"
license = { file = "COPYING.LESSER" }
authors = [
      { name = "Jack S. Hale", email = "mail@jackhale.co.uk" },
      { name = "Tian Yang" }
]
dependencies = [
      "fenics-dolfinx>=0.10.0.dev0,<0.11.0",
]

[project.optional-dependencies]
doc = ["jupytext", "myst_parser", "sphinx_rtd_theme", "sphinx"]
demo = []
test = ["pytest"]
lint = ["ruff"]
ci = [
    "fenicsx-shells[doc]",
    "fenicsx-shells[demo]",
    "fenicsx-shells[test]",
    "fenicsx-shells[lint]",
]

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
      "E", # pycodestyle
      "W", # pycodestyle
      "F", # pyflakes
      "I",   # isort - use standalone isort
      "RUF", # Ruff-specific rules
      "UP",  # pyupgrade
      "ICN", # flake8-import-conventions
      "NPY", # numpy-specific rules
      "FLY", # use f-string not static joins
]
ignore = ["UP007", "RUF012"]
allowed-confusables = ["Ïƒ"]

[tool.ruff.lint.isort]
known-first-party = ["basix", "dolfinx", "ffcx", "ufl"]
known-third-party = ["gmsh", "numba", "numpy", "pytest", "pyvista"]
section-order = [
      "future",
      "standard-library",
      "mpi",
      "third-party",
      "first-party",
      "local-folder",
]

[tool.ruff.lint.isort.sections]
"mpi" = ["mpi4py", "petsc4py"]
